// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace CasaRobot.Dominio.Modelo.Entidades;

public partial class CasaRobot2Context : DbContext
{
    public CasaRobot2Context(CasaRobot2Context dbContext)
    {
    }

    public CasaRobot2Context(DbContextOptions<CasaRobot2Context> options)
        : base(options)
    {
    }

    public virtual DbSet<Clientes> Clientes { get; set; }

    public virtual DbSet<Costos> Costos { get; set; }

    public virtual DbSet<Empleados> Empleados { get; set; }

    public virtual DbSet<Equipos> Equipos { get; set; }

    public virtual DbSet<Estados> Estados { get; set; }

    public virtual DbSet<HistorialServicios> HistorialServicios { get; set; }

    public virtual DbSet<MetodosPago> MetodosPago { get; set; }

    public virtual DbSet<Notificaciones> Notificaciones { get; set; }

    public virtual DbSet<OrdenesServicio> OrdenesServicio { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=STEPHYR;Initial Catalog=CasaRobot2;Integrated Security=True;TrustServerCertificate= True;");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Clientes>(entity =>
        {
            entity.HasKey(e => e.ClienteID).HasName("PK__Clientes__71ABD0A77FDF82CA");

            entity.Property(e => e.Correo)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Direccion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Telefono)
                .HasMaxLength(20)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Costos>(entity =>
        {
            entity.HasKey(e => e.CostoID).HasName("PK__Costos__501474F56E252610");

            entity.Property(e => e.DetalleCosto).HasColumnType("text");
            entity.Property(e => e.Monto).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Orden).WithMany(p => p.Costos)
                .HasForeignKey(d => d.OrdenID)
                .HasConstraintName("FK__Costos__OrdenID__4F7CD00D");
        });

        modelBuilder.Entity<Empleados>(entity =>
        {
            entity.HasKey(e => e.EmpleadoID).HasName("PK__Empleado__958BE6F0815E4BBD");

            entity.Property(e => e.Cargo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Telefono)
                .HasMaxLength(20)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Equipos>(entity =>
        {
            entity.HasKey(e => e.EquipoID).HasName("PK__Equipos__DE8A0BFF1FD090BA");

            entity.Property(e => e.Marca)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Modelo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.NumeroSerie)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.Cliente).WithMany(p => p.Equipos)
                .HasForeignKey(d => d.ClienteID)
                .HasConstraintName("FK__Equipos__Cliente__398D8EEE");
        });

        modelBuilder.Entity<Estados>(entity =>
        {
            entity.HasKey(e => e.EstadoID).HasName("PK__Estados__FEF86B60DA188BBE");

            entity.Property(e => e.NombreEstado)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<HistorialServicios>(entity =>
        {
            entity.HasKey(e => e.HistorialID).HasName("PK__Historia__975206EF3B9E7ABE");

            entity.Property(e => e.DescripcionTrabajo).HasColumnType("text");

            entity.HasOne(d => d.Empleado).WithMany(p => p.HistorialServicios)
                .HasForeignKey(d => d.EmpleadoID)
                .HasConstraintName("FK__Historial__Emple__4BAC3F29");

            entity.HasOne(d => d.Orden).WithMany(p => p.HistorialServicios)
                .HasForeignKey(d => d.OrdenID)
                .HasConstraintName("FK__Historial__Orden__4AB81AF0");
        });

        modelBuilder.Entity<MetodosPago>(entity =>
        {
            entity.HasKey(e => e.PagoID).HasName("PK__MetodosP__F00B61583562FCAE");

            entity.Property(e => e.FechaPago).HasColumnType("datetime");
            entity.Property(e => e.Metodo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Monto).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Orden).WithMany(p => p.MetodosPago)
                .HasForeignKey(d => d.OrdenID)
                .HasConstraintName("FK__MetodosPa__Orden__5812160E");
        });

        modelBuilder.Entity<Notificaciones>(entity =>
        {
            entity.HasKey(e => e.NotificacionID).HasName("PK__Notifica__BCC120C4179D5905");

            entity.Property(e => e.Detalle).HasColumnType("text");
            entity.Property(e => e.FechaEnvio)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.TipoNotificacion)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.Cliente).WithMany(p => p.Notificaciones)
                .HasForeignKey(d => d.ClienteID)
                .HasConstraintName("FK__Notificac__Clien__5441852A");
        });

        modelBuilder.Entity<OrdenesServicio>(entity =>
        {
            entity.HasKey(e => e.OrdenID).HasName("PK__OrdenesS__C088A4E42C9D966E");

            entity.Property(e => e.DescripcionProblema).HasColumnType("text");
            entity.Property(e => e.FechaIngreso)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaSalida).HasColumnType("datetime");

            entity.HasOne(d => d.Equipo).WithMany(p => p.OrdenesServicio)
                .HasForeignKey(d => d.EquipoID)
                .HasConstraintName("FK__OrdenesSe__Equip__45F365D3");

            entity.HasOne(d => d.Estado).WithMany(p => p.OrdenesServicio)
                .HasForeignKey(d => d.EstadoID)
                .HasConstraintName("FK__OrdenesSe__Estad__47DBAE45");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}